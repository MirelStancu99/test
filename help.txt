string connString; //inafara constructor
connString = "Provider = Microsoft.ACE.OLEDB.12.0; Data Source = student.accdb";//in constructor
OleDbConnection conexiune = new OleDbConnection(connString);
try
{
    conexiune.Open();
    //MessageBox.Show("s-a deschis");
    OleDbCommand comanda = new OleDbCommand();
    comanda.CommandText = "SELECT * FROM student";
    comanda.Connection = conexiune;
 
    OleDbDataReader reader = comanda.ExecuteReader();
    while (reader.Read())
    {
        ListViewItem itm = new ListViewItem(reader["cod"].ToString());
        itm.SubItems.Add(reader["nume"].ToString());
        listView1.Items.Add(itm);
    }
}
catch (Exception ex)
{
    MessageBox.Show(ex.Message);
}
finally
{
    conexiune.Close();
}
 
 
==================================================
 
private void button2_Click(object sender, EventArgs e)
{
    OleDbConnection conexiune = new OleDbConnection(connString);
    try
    {
        conexiune.Open();
        OleDbCommand comanda = new OleDbCommand();
        comanda.Connection = conexiune;
        foreach (ListViewItem itm in listView1.Items)
            if (itm.Checked)
            {
                int cod = Convert.ToInt32(itm.SubItems[0].Text);
                comanda.CommandText = "UPDATE student SET forma='ZI' WHERE cod=" + cod;
                comanda.ExecuteNonQuery();
            }
    }
    catch (Exception ex)
    {
        MessageBox.Show(ex.Message);
    }
    finally
    {
        conexiune.Close();
    }
    button1_Click(sender, e);
}
 
private void dELETEToolStripMenuItem_Click(object sender, EventArgs e)
{
    OleDbConnection conexiune = new OleDbConnection(connString);
    try
    {
        conexiune.Open();
        OleDbCommand comanda = new OleDbCommand();
        comanda.Connection = conexiune;
        foreach (ListViewItem itm in listView1.Items)
            if (itm.Selected)
            {
                int cod = Convert.ToInt32(itm.SubItems[0].Text);
                comanda.CommandText = "DELETE FROM student WHERE cod=" + cod;
                comanda.ExecuteNonQuery();
            }
    }
    catch (Exception ex)
    {
        MessageBox.Show(ex.Message);
    }
    finally
    {
        conexiune.Close();
    }
    button1_Click(sender, e);
}



Form2 frm2 = new Form2();
frm2.ShowDialog();
if (frm2.DialogResult == DialogResult.OK)
{
    DateTime data = frm2.dtpData.Value;
    string nume = frm2.tbNume.Text;
    string specializare = frm2.cbSpecializare.SelectedItem.ToString();
    float punctajPractic = float.Parse(frm2.tbPctPractic.Text);
    float punctajTeoretic = float.Parse(frm2.tbPctTeorie.Text);
    Interviu i = new Interviu(data, specializare, nume, punctajTeoretic,
        punctajPractic);
    job += i;
    ListViewItem itm = new ListViewItem(data.ToString());
    itm.SubItems.Add(nume);
    itm.SubItems.Add(specializare);
    itm.SubItems.Add(i.calculeazaPunctaj().ToString());
    listView1.Items.Add(itm);
    listView1.Refresh();
}
 
 
 
=====editare
if(listViewPrincipal.SelectedItems.Count == 1)
            {
                FormCredit formCredit = new FormCredit();
                formCredit.buttonAdauga.Text = "Editeaza";
                string numeCautat = listViewPrincipal.SelectedItems[0].Text;
                formCredit.tbNumeClient.Text = listViewPrincipal.SelectedItems[0].Text;
                formCredit.tbValoareCredit.Text = listViewPrincipal.SelectedItems[0].SubItems[1].Text;
                formCredit.tbDobanda.Text = listViewPrincipal.SelectedItems[0].SubItems[2].Text;
                formCredit.tbDataAcordarii.Text = listViewPrincipal.SelectedItems[0].SubItems[3].Text;
                formCredit.tbPerioada.Text = listViewPrincipal.SelectedItems[0].SubItems[4].Text;
 
                formCredit.ShowDialog();
 
                string numeClient = formCredit.tbNumeClient.Text;
                float valoareCredit = float.Parse(formCredit.tbValoareCredit.Text);
                float dobanda = float.Parse(formCredit.tbDobanda.Text);
                string dataAcordarii = formCredit.tbDataAcordarii.Text;
                int perioada = int.Parse(formCredit.tbPerioada.Text);
                foreach(Credit c in credite)
                {
                    if (c.NumeClient.Equals(numeCautat))
                    {
                        c.NumeClient = numeClient;
                        c.ValoareCredit = valoareCredit;
                        c.Dobanda = dobanda;
                        c.DataAcordarii = dataAcordarii;
                        c.Perioada = perioada;
                    }
                }
                listViewPrincipal.SelectedItems[0].Text = formCredit.tbNumeClient.Text;
                listViewPrincipal.SelectedItems[0].SubItems[1].Text = formCredit.tbValoareCredit.Text;
                listViewPrincipal.SelectedItems[0].SubItems[2].Text = formCredit.tbDobanda.Text;
                listViewPrincipal.SelectedItems[0].SubItems[3].Text = formCredit.tbDataAcordarii.Text;
                listViewPrincipal.SelectedItems[0].SubItems[4].Text = formCredit.tbPerioada.Text;
 
            }
 
//=======sterge
 
if(listViewPrincipal.SelectedItems.Count == 1)
            {
                Credit credit = new Credit();
                string numeCautat = listViewPrincipal.SelectedItems[0].Text;
                listViewPrincipal.SelectedItems[0].Remove();
               
                foreach (Credit c in credite)
                {
                    if(c.NumeClient.Equals(numeCautat))
                    {
                        credit = c;
                    }
                }  
                credite.Remove(credit);
            }
 
//================
        public Tranzactie this[int i]
        {
            get
            {
                return this.tranzactieList[i];
            }
            set
            {
                this.tranzactieList[i] = value;
            }
        }
 
        public static explicit operator double(ExtrasCont extras)
        {
            double rezultat = 0 ;
            double suma = 0;
            int contor = 0;
            foreach(Tranzactie c in extras.tranzactieList)
            {
                suma += c.Suma;
                contor++;
            }
            rezultat = suma / contor;
            return rezultat;
        }
 
        public static implicit operator int(ExtrasCont extras)
        {
            int rezultat = 0 ;
            foreach(Tranzactie t in extras.tranzactieList)
            {
                rezultat++;
            }
            return rezultat;
        }
        
        
        ========fisier
              private void deschideToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpenFileDialog dlg = new OpenFileDialog();
            dlg.Filter = "(*.txt)|*.txt";
            if (dlg.ShowDialog() == DialogResult.OK)
            {
                FileStream fs = new FileStream(dlg.FileName, FileMode.Open, FileAccess.Read);
                StreamReader sr = new StreamReader(fs);
                textBox1.Text = sr.ReadToEnd();
                string[] text = textBox1.text.Split(",");
                string line;
                while( (line = sr.ReadLine())!= null)
                {
                line...
                }
                
                sr.Close();
                fs.Close();
            }
        }

        private void salveazaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SaveFileDialog dlg = new SaveFileDialog();
            dlg.Filter = "(*.txt)|*.txt";
            if (dlg.ShowDialog() == DialogResult.OK)
            {
                FileStream fs = new FileStream(dlg.FileName, FileMode.Create, FileAccess.Write);
                StreamWriter sw = new StreamWriter(fs);
                sw.WriteLine(textBox1.Text);
                sw.Close();
                fs.Close();
                textBox1.Clear();
            }
        }
        
               private void deschideToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpenFileDialog dlg = new OpenFileDialog();
            dlg.Filter = "(*.txt)|*.txt";
            if (dlg.ShowDialog() == DialogResult.OK)
            {
                FileStream fs = new FileStream(dlg.FileName, FileMode.Open, FileAccess.Read);
                StreamReader sr = new StreamReader(fs);
                textBox1.Text = sr.ReadToEnd();
                sr.Close();
                fs.Close();
            }
        }

        private void salveazaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SaveFileDialog dlg = new SaveFileDialog();
            dlg.Filter = "(*.txt)|*.txt";
            if (dlg.ShowDialog() == DialogResult.OK)
            {
                FileStream fs = new FileStream(dlg.FileName, FileMode.Create, FileAccess.Write);
                StreamWriter sw = new StreamWriter(fs);
                sw.WriteLine(textBox1.Text);
                sw.Close();
                fs.Close();
                textBox1.Clear();
            }
        }
